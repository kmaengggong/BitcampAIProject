1. [인사말 및 자기소개]
안녕하세요. C조 어벤져스 팀의 발표를 시작하도록 하겠습니다.
저희 팀에서는 (주제 ㅡ 신용카드 자격 분석)이라는 과제를 진행하였습니다.

2. [프로젝트 목차 소개]
저희 팀의 프로젝트 목차입니다. 가볍게 참고하시면 되겠습니다. 

3. [팀 구성 및 역할 소개]
팀 구성 및 역할 분배입니다. 역시 가볍게 참고만 해주시면 됩니다.

4. [목표 수립]
저희 팀의 미션은 신용카드 자격 적합 여부를 판별하는 것으로,
신용카드 자격 적합성을 판별하기 위한 데이터 분석과 모델링을 진행하였습니다.
이를 위해, 신용카드를 사용하는 고객의 자격 조건을 효과적으로 관리하는 목표를 수립하게 되었습니다.

5. [수행 절차 및 방법]
수행 절차 및 방법이, 어떤 과정으로 진행되었는지 목차를 한 번 살펴보시면 될 것 같습니다.
그리고 하나씩 간략하게 설명드리도록 하겠습니다.

5-1) 먼저 데이터 전처리로써, 데이터 확인을 진행하였습니다. 
(datasets.shape 함수에서는 개수 확인을 / datasets.columns 함수에서는 feature 요소 확인이 이루어졌습니다.)
(특히 각 feature들 중 자격 적합성에 영향을 주는, 가장 유의미한 요소는 Is_Lead 자격여부 요소입니다.)

5-2) 다음 데이터 전처리는, 라벨링입니다.
(그림을 보시면, String문자열이 LabelEncoder함수에 의해 라벨링되면서, 기존의 String문자열이 계산 가능한 값으로 호환되어, 데이터 인식이 가능해졌습니다.
(이로써, 데이터 분석 다음 단계로 진행할 수 있게 되었습니다.)

5-3) 라벨링에 이어, 데이터 시각화 자료인 heatmap부터 이상치 그래프인 outliers까지 진행하였습니다.
(먼저 히트맵 시각화 자료를 보시면, 컬럼의 중요도를 확인할 수 있는데요.)
(히트맵의 Is_Lead컬럼과 상관계수가 가장 높은 credit_product컬럼에서는, yes or no값만 있어서 이상 값이 존재하지 않다고 판단했습니다.)
(따라서 다음 순위인 vintage컬럼에서 발견한 이상 값을 데이터화하였습니다.)

(그리고 vintage컬럼에서 contamination파라미터를 이용해 이상 값을 추출하였고, EllipticEnvelope 함수를 사용하여 이미지와 같이, 이상 값을 제거할 수 있었습니다.)
(결과적으로, 이 작업을 통해 이상 값 제거가 accuracy를 높이는 데 큰 영향을 미친다는 사실도 알게 되었습니다.)

5-4) 다음 시각화 자료인 feature importances에서 LGBM, XGB, CatBoost의 모델별로 테스트 결과는 상이했습니다.
(그 중에서도 SelectFromModel와 XGB함수가 가장 효율적인 컬럼 조합이어서, XGB로 테스팅한 accuracy의 결과값이 가장 높게 나오게 되었고, 결국 XGB로 데이터에 반영하게 되었습니다.)

5-4) 다음으로 살펴볼 자료는, 불필요한 feature처리와 Nan값 처리 및 스케일링에 대한 내용입니다.
(SimpleInputer함수에서는 NaN값을 최빈값 전략으로 처리했을 때 그리고
Scaler함수 중에서는, StandardScaler함수로 적용했을 때의 값이 가장 잘 나왔습니다.)

(Deep Learning Sequential에서는, 이미지와 같이 코드를 설정했고,
relu함수를 사용하여 deep한 레이어층을 만들어 accuracy를 높였습니다.)
(그리고 sigmoid함수로 0과 1로 이진 분류하였습니다. epochs와 batch_size값도 참고해주시면 됩니다.)

(Machine Learning Voting Classifier에서는, Deep learning Sequential처럼 코드를 이미지화하였습니다.)
(이 중에서 참고할 만한 것으로 kfold함수는, 조금 더 신뢰있는 accuracy값을 확인하기 위한 설정입니다.)

5-5) 지금 나오는 데이터들은 accuracy에 유의미한 값들로써, deep learning과 machine learning에 어떻게 어떠한 설정값을 입력해야만, 가장 효율적인 값이 나오는지를 체크한 자료들입니다.

6. [수행 결과]
이제 마지막으로 수행 결과에 대한 내용입니다.
최종 accuracy값은, 딥러닝 0.904, 머신러닝 0.901으로 산출되었습니다.

7. [팀 평가 의견 + 개발 환경에 활용한 도구 및 참고 레퍼런스]
저희 팀의 총평은 ~이와 같습니다.
개발에 활용한 도구와 참고 reference는 이미지로 따로 정리해 두었습니다.

8. [QnA]
감사합니다. 이상 발표를 마치도록 하겠습니다. 추가 질문이 있다면, 질문 받도록 하겠습니다.

